/*
Navicat Oracle Data Transfer
Oracle Client Version : 10.2.0.5.0

Source Server         : local-oracle
Source Server Version : 110200
Source Host           : 127.0.0.1:1521
Source Schema         : DCM

Target Server Type    : ORACLE
Target Server Version : 110200
File Encoding         : 65001

Date: 2018-03-27 17:06:43
*/


-- ----------------------------
-- Table structure for APEX$_ACL
-- ----------------------------
DROP TABLE "DCM"."APEX$_ACL";
CREATE TABLE "DCM"."APEX$_ACL" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"USERNAME" VARCHAR2(255 BYTE) NOT NULL ,
"PRIV" VARCHAR2(1 BYTE) NOT NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_ACL
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_FILES
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_FILES";
CREATE TABLE "DCM"."APEX$_WS_FILES" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NULL ,
"ROW_ID" NUMBER NULL ,
"WEBPAGE_ID" NUMBER NULL ,
"COMPONENT_LEVEL" VARCHAR2(30 BYTE) NULL ,
"NAME" VARCHAR2(255 BYTE) NOT NULL ,
"IMAGE_ALIAS" VARCHAR2(255 BYTE) NULL ,
"IMAGE_ATTRIBUTES" VARCHAR2(255 BYTE) NULL ,
"CONTENT" BLOB NULL ,
"CONTENT_LAST_UPDATE" DATE NULL ,
"MIME_TYPE" VARCHAR2(255 BYTE) NOT NULL ,
"CONTENT_CHARSET" VARCHAR2(255 BYTE) NULL ,
"CONTENT_FILENAME" VARCHAR2(500 BYTE) NULL ,
"DESCRIPTION" VARCHAR2(4000 BYTE) NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_FILES
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_HISTORY
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_HISTORY";
CREATE TABLE "DCM"."APEX$_WS_HISTORY" (
"ROW_ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NOT NULL ,
"COLUMN_NAME" VARCHAR2(255 BYTE) NULL ,
"OLD_VALUE" VARCHAR2(4000 BYTE) NULL ,
"NEW_VALUE" VARCHAR2(4000 BYTE) NULL ,
"APPLICATION_USER_ID" VARCHAR2(255 BYTE) NULL ,
"CHANGE_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_HISTORY
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_LINKS
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_LINKS";
CREATE TABLE "DCM"."APEX$_WS_LINKS" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NULL ,
"ROW_ID" NUMBER NULL ,
"WEBPAGE_ID" NUMBER NULL ,
"COMPONENT_LEVEL" VARCHAR2(30 BYTE) NULL ,
"TAGS" VARCHAR2(4000 BYTE) NULL ,
"SHOW_ON_HOMEPAGE" VARCHAR2(1 BYTE) NULL ,
"LINK_NAME" VARCHAR2(255 BYTE) NOT NULL ,
"URL" VARCHAR2(4000 BYTE) NOT NULL ,
"LINK_DESCRIPTION" VARCHAR2(4000 BYTE) NULL ,
"DISPLAY_SEQUENCE" NUMBER NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_LINKS
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_NOTES
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_NOTES";
CREATE TABLE "DCM"."APEX$_WS_NOTES" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NULL ,
"ROW_ID" NUMBER NULL ,
"WEBPAGE_ID" NUMBER NULL ,
"COMPONENT_LEVEL" VARCHAR2(30 BYTE) NULL ,
"CONTENT" CLOB NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_NOTES
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_ROWS
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_ROWS";
CREATE TABLE "DCM"."APEX$_WS_ROWS" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NOT NULL ,
"UNIQUE_VALUE" VARCHAR2(255 BYTE) NULL ,
"TAGS" VARCHAR2(4000 BYTE) NULL ,
"PARENT_ROW_ID" NUMBER NULL ,
"OWNER" VARCHAR2(255 BYTE) NULL ,
"GEOCODE" VARCHAR2(512 BYTE) NULL ,
"LOAD_ORDER" NUMBER NULL ,
"CHANGE_COUNT" NUMBER NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL ,
"C001" VARCHAR2(4000 BYTE) NULL ,
"C002" VARCHAR2(4000 BYTE) NULL ,
"C003" VARCHAR2(4000 BYTE) NULL ,
"C004" VARCHAR2(4000 BYTE) NULL ,
"C005" VARCHAR2(4000 BYTE) NULL ,
"C006" VARCHAR2(4000 BYTE) NULL ,
"C007" VARCHAR2(4000 BYTE) NULL ,
"C008" VARCHAR2(4000 BYTE) NULL ,
"C009" VARCHAR2(4000 BYTE) NULL ,
"C010" VARCHAR2(4000 BYTE) NULL ,
"C011" VARCHAR2(4000 BYTE) NULL ,
"C012" VARCHAR2(4000 BYTE) NULL ,
"C013" VARCHAR2(4000 BYTE) NULL ,
"C014" VARCHAR2(4000 BYTE) NULL ,
"C015" VARCHAR2(4000 BYTE) NULL ,
"C016" VARCHAR2(4000 BYTE) NULL ,
"C017" VARCHAR2(4000 BYTE) NULL ,
"C018" VARCHAR2(4000 BYTE) NULL ,
"C019" VARCHAR2(4000 BYTE) NULL ,
"C020" VARCHAR2(4000 BYTE) NULL ,
"C021" VARCHAR2(4000 BYTE) NULL ,
"C022" VARCHAR2(4000 BYTE) NULL ,
"C023" VARCHAR2(4000 BYTE) NULL ,
"C024" VARCHAR2(4000 BYTE) NULL ,
"C025" VARCHAR2(4000 BYTE) NULL ,
"C026" VARCHAR2(4000 BYTE) NULL ,
"C027" VARCHAR2(4000 BYTE) NULL ,
"C028" VARCHAR2(4000 BYTE) NULL ,
"C029" VARCHAR2(4000 BYTE) NULL ,
"C030" VARCHAR2(4000 BYTE) NULL ,
"C031" VARCHAR2(4000 BYTE) NULL ,
"C032" VARCHAR2(4000 BYTE) NULL ,
"C033" VARCHAR2(4000 BYTE) NULL ,
"C034" VARCHAR2(4000 BYTE) NULL ,
"C035" VARCHAR2(4000 BYTE) NULL ,
"C036" VARCHAR2(4000 BYTE) NULL ,
"C037" VARCHAR2(4000 BYTE) NULL ,
"C038" VARCHAR2(4000 BYTE) NULL ,
"C039" VARCHAR2(4000 BYTE) NULL ,
"C040" VARCHAR2(4000 BYTE) NULL ,
"C041" VARCHAR2(4000 BYTE) NULL ,
"C042" VARCHAR2(4000 BYTE) NULL ,
"C043" VARCHAR2(4000 BYTE) NULL ,
"C044" VARCHAR2(4000 BYTE) NULL ,
"C045" VARCHAR2(4000 BYTE) NULL ,
"C046" VARCHAR2(4000 BYTE) NULL ,
"C047" VARCHAR2(4000 BYTE) NULL ,
"C048" VARCHAR2(4000 BYTE) NULL ,
"C049" VARCHAR2(4000 BYTE) NULL ,
"C050" VARCHAR2(4000 BYTE) NULL ,
"N001" NUMBER NULL ,
"N002" NUMBER NULL ,
"N003" NUMBER NULL ,
"N004" NUMBER NULL ,
"N005" NUMBER NULL ,
"N006" NUMBER NULL ,
"N007" NUMBER NULL ,
"N008" NUMBER NULL ,
"N009" NUMBER NULL ,
"N010" NUMBER NULL ,
"N011" NUMBER NULL ,
"N012" NUMBER NULL ,
"N013" NUMBER NULL ,
"N014" NUMBER NULL ,
"N015" NUMBER NULL ,
"N016" NUMBER NULL ,
"N017" NUMBER NULL ,
"N018" NUMBER NULL ,
"N019" NUMBER NULL ,
"N020" NUMBER NULL ,
"N021" NUMBER NULL ,
"N022" NUMBER NULL ,
"N023" NUMBER NULL ,
"N024" NUMBER NULL ,
"N025" NUMBER NULL ,
"N026" NUMBER NULL ,
"N027" NUMBER NULL ,
"N028" NUMBER NULL ,
"N029" NUMBER NULL ,
"N030" NUMBER NULL ,
"N031" NUMBER NULL ,
"N032" NUMBER NULL ,
"N033" NUMBER NULL ,
"N034" NUMBER NULL ,
"N035" NUMBER NULL ,
"N036" NUMBER NULL ,
"N037" NUMBER NULL ,
"N038" NUMBER NULL ,
"N039" NUMBER NULL ,
"N040" NUMBER NULL ,
"N041" NUMBER NULL ,
"N042" NUMBER NULL ,
"N043" NUMBER NULL ,
"N044" NUMBER NULL ,
"N045" NUMBER NULL ,
"N046" NUMBER NULL ,
"N047" NUMBER NULL ,
"N048" NUMBER NULL ,
"N049" NUMBER NULL ,
"N050" NUMBER NULL ,
"D001" DATE NULL ,
"D002" DATE NULL ,
"D003" DATE NULL ,
"D004" DATE NULL ,
"D005" DATE NULL ,
"D006" DATE NULL ,
"D007" DATE NULL ,
"D008" DATE NULL ,
"D009" DATE NULL ,
"D010" DATE NULL ,
"D011" DATE NULL ,
"D012" DATE NULL ,
"D013" DATE NULL ,
"D014" DATE NULL ,
"D015" DATE NULL ,
"D016" DATE NULL ,
"D017" DATE NULL ,
"D018" DATE NULL ,
"D019" DATE NULL ,
"D020" DATE NULL ,
"D021" DATE NULL ,
"D022" DATE NULL ,
"D023" DATE NULL ,
"D024" DATE NULL ,
"D025" DATE NULL ,
"D026" DATE NULL ,
"D027" DATE NULL ,
"D028" DATE NULL ,
"D029" DATE NULL ,
"D030" DATE NULL ,
"D031" DATE NULL ,
"D032" DATE NULL ,
"D033" DATE NULL ,
"D034" DATE NULL ,
"D035" DATE NULL ,
"D036" DATE NULL ,
"D037" DATE NULL ,
"D038" DATE NULL ,
"D039" DATE NULL ,
"D040" DATE NULL ,
"D041" DATE NULL ,
"D042" DATE NULL ,
"D043" DATE NULL ,
"D044" DATE NULL ,
"D045" DATE NULL ,
"D046" DATE NULL ,
"D047" DATE NULL ,
"D048" DATE NULL ,
"D049" DATE NULL ,
"D050" DATE NULL ,
"CLOB001" CLOB NULL ,
"SEARCH_CLOB" CLOB NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_ROWS
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_TAGS
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_TAGS";
CREATE TABLE "DCM"."APEX$_WS_TAGS" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"DATA_GRID_ID" NUMBER NULL ,
"ROW_ID" NUMBER NULL ,
"WEBPAGE_ID" NUMBER NULL ,
"COMPONENT_LEVEL" VARCHAR2(30 BYTE) NULL ,
"TAG" VARCHAR2(4000 BYTE) NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_TAGS
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_WEBPG_SECTION_HISTORY
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY";
CREATE TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" (
"SECTION_ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"WEBPAGE_ID" NUMBER NOT NULL ,
"OLD_DISPLAY_SEQUENCE" NUMBER NULL ,
"NEW_DISPLAY_SEQUENCE" NUMBER NULL ,
"OLD_TITLE" VARCHAR2(4000 BYTE) NULL ,
"NEW_TITLE" VARCHAR2(4000 BYTE) NULL ,
"OLD_CONTENT" CLOB NULL ,
"NEW_CONTENT" CLOB NULL ,
"APPLICATION_USER_ID" VARCHAR2(255 BYTE) NOT NULL ,
"CHANGE_DATE" DATE NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_WEBPG_SECTION_HISTORY
-- ----------------------------

-- ----------------------------
-- Table structure for APEX$_WS_WEBPG_SECTIONS
-- ----------------------------
DROP TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS";
CREATE TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" (
"ID" NUMBER NOT NULL ,
"WS_APP_ID" NUMBER NOT NULL ,
"WEBPAGE_ID" NUMBER NULL ,
"DISPLAY_SEQUENCE" NUMBER NULL ,
"SECTION_TYPE" VARCHAR2(30 BYTE) NOT NULL ,
"TITLE" VARCHAR2(4000 BYTE) NULL ,
"CONTENT" CLOB NULL ,
"CONTENT_UPPER" CLOB NULL ,
"NAV_START_WEBPAGE_ID" NUMBER NULL ,
"NAV_MAX_LEVEL" NUMBER NULL ,
"NAV_INCLUDE_LINK" VARCHAR2(1 BYTE) NULL ,
"DATA_GRID_ID" NUMBER NULL ,
"REPORT_ID" NUMBER NULL ,
"DATA_SECTION_STYLE" NUMBER NULL ,
"CHART_TYPE" VARCHAR2(255 BYTE) NULL ,
"CHART_3D" VARCHAR2(1 BYTE) NULL ,
"CHART_LABEL" VARCHAR2(255 BYTE) NULL ,
"LABEL_AXIS_TITLE" VARCHAR2(255 BYTE) NULL ,
"CHART_VALUE" VARCHAR2(255 BYTE) NULL ,
"VALUE_AXIS_TITLE" VARCHAR2(255 BYTE) NULL ,
"CHART_AGGREGATE" VARCHAR2(255 BYTE) NULL ,
"CHART_SORTING" VARCHAR2(255 BYTE) NULL ,
"CREATED_ON" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(255 BYTE) NOT NULL ,
"UPDATED_ON" DATE NULL ,
"UPDATED_BY" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of APEX$_WS_WEBPG_SECTIONS
-- ----------------------------

-- ----------------------------
-- Table structure for DEMO_CUSTOMERS
-- ----------------------------
DROP TABLE "DCM"."DEMO_CUSTOMERS";
CREATE TABLE "DCM"."DEMO_CUSTOMERS" (
"CUSTOMER_ID" NUMBER NOT NULL ,
"CUST_FIRST_NAME" VARCHAR2(20 BYTE) NOT NULL ,
"CUST_LAST_NAME" VARCHAR2(20 BYTE) NOT NULL ,
"CUST_STREET_ADDRESS1" VARCHAR2(60 BYTE) NULL ,
"CUST_STREET_ADDRESS2" VARCHAR2(60 BYTE) NULL ,
"CUST_CITY" VARCHAR2(30 BYTE) NULL ,
"CUST_STATE" VARCHAR2(2 BYTE) NULL ,
"CUST_POSTAL_CODE" VARCHAR2(10 BYTE) NULL ,
"PHONE_NUMBER1" VARCHAR2(25 BYTE) NULL ,
"PHONE_NUMBER2" VARCHAR2(25 BYTE) NULL ,
"CREDIT_LIMIT" NUMBER(9,2) NULL ,
"CUST_EMAIL" VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_CUSTOMERS
-- ----------------------------
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('1', 'John', 'Dulles', '45020 Aviation Drive', null, 'Sterling', 'VA', '20166', '703-555-2143', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('2', 'William', 'Hartsfield', '6000 North Terminal Parkway', null, 'Atlanta', 'GA', '30320', '404-555-3285', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('3', 'Edward', 'Logan', '1 Harborside Drive', null, 'East Boston', 'MA', '02128', '617-555-3295', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('4', 'Edward "Butch"', 'OHare', '10000 West OHare', null, 'Chicago', 'IL', '60666', '773-555-7693', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('5', 'Fiorello', 'LaGuardia', 'Hangar Center', 'Third Floor', 'Flushing', 'NY', '11371', '212-555-3923', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('6', 'Albert', 'Lambert', '10701 Lambert International Blvd.', null, 'St. Louis', 'MO', '63145', '314-555-4022', null, '1000', null);
INSERT INTO "DCM"."DEMO_CUSTOMERS" VALUES ('7', 'Eugene', 'Bradley', 'Schoephoester Road', null, 'Windsor Locks', 'CT', '06096', '860-555-1835', null, '1000', null);

-- ----------------------------
-- Table structure for DEMO_ORDER_ITEMS
-- ----------------------------
DROP TABLE "DCM"."DEMO_ORDER_ITEMS";
CREATE TABLE "DCM"."DEMO_ORDER_ITEMS" (
"ORDER_ITEM_ID" NUMBER(3) NOT NULL ,
"ORDER_ID" NUMBER NOT NULL ,
"PRODUCT_ID" NUMBER NOT NULL ,
"UNIT_PRICE" NUMBER(8,2) NOT NULL ,
"QUANTITY" NUMBER(8) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_ORDER_ITEMS
-- ----------------------------
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('1', '1', '1', '50', '10');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('2', '1', '2', '80', '8');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('3', '1', '3', '150', '5');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('4', '2', '1', '50', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('5', '2', '2', '80', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('6', '2', '3', '150', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('7', '2', '4', '60', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('8', '2', '5', '80', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('9', '2', '6', '120', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('10', '2', '7', '30', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('11', '2', '8', '125', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('12', '2', '9', '110', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('13', '2', '10', '50', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('14', '3', '4', '60', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('15', '3', '5', '80', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('16', '3', '6', '120', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('17', '3', '8', '125', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('18', '3', '10', '50', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('19', '4', '6', '120', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('20', '4', '7', '30', '6');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('21', '4', '8', '125', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('22', '4', '9', '110', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('23', '4', '10', '50', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('24', '5', '1', '50', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('25', '5', '2', '80', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('26', '5', '3', '150', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('27', '5', '4', '60', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('28', '5', '5', '80', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('29', '6', '3', '150', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('30', '6', '6', '120', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('31', '6', '8', '125', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('32', '6', '9', '110', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('33', '7', '1', '50', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('34', '7', '2', '80', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('35', '7', '4', '60', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('36', '7', '5', '80', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('37', '7', '7', '30', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('38', '7', '8', '125', '1');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('39', '7', '10', '50', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('40', '8', '2', '80', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('41', '8', '3', '150', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('42', '8', '6', '120', '1');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('43', '8', '9', '110', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('44', '9', '4', '60', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('45', '9', '5', '80', '3');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('46', '9', '8', '125', '2');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('47', '10', '1', '50', '5');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('48', '10', '2', '80', '4');
INSERT INTO "DCM"."DEMO_ORDER_ITEMS" VALUES ('49', '10', '3', '150', '2');

-- ----------------------------
-- Table structure for DEMO_ORDERS
-- ----------------------------
DROP TABLE "DCM"."DEMO_ORDERS";
CREATE TABLE "DCM"."DEMO_ORDERS" (
"ORDER_ID" NUMBER NOT NULL ,
"CUSTOMER_ID" NUMBER NOT NULL ,
"ORDER_TOTAL" NUMBER(8,2) NULL ,
"ORDER_TIMESTAMP" DATE NULL ,
"USER_ID" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_ORDERS
-- ----------------------------
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('1', '7', '1890', TO_DATE('2018-03-22 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('2', '1', '2380', TO_DATE('2018-03-19 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('3', '2', '1640', TO_DATE('2018-03-13 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('4', '5', '1090', TO_DATE('2018-03-05 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('5', '6', '950', TO_DATE('2018-02-28 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('6', '3', '1515', TO_DATE('2018-02-23 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('7', '3', '905', TO_DATE('2018-02-13 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('8', '4', '1060', TO_DATE('2018-02-11 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('9', '2', '730', TO_DATE('2018-01-31 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');
INSERT INTO "DCM"."DEMO_ORDERS" VALUES ('10', '7', '870', TO_DATE('2018-01-17 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '2');

-- ----------------------------
-- Table structure for DEMO_PRODUCT_INFO
-- ----------------------------
DROP TABLE "DCM"."DEMO_PRODUCT_INFO";
CREATE TABLE "DCM"."DEMO_PRODUCT_INFO" (
"PRODUCT_ID" NUMBER NOT NULL ,
"PRODUCT_NAME" VARCHAR2(50 BYTE) NULL ,
"PRODUCT_DESCRIPTION" VARCHAR2(2000 BYTE) NULL ,
"CATEGORY" VARCHAR2(30 BYTE) NULL ,
"PRODUCT_AVAIL" VARCHAR2(1 BYTE) NULL ,
"LIST_PRICE" NUMBER(8,2) NULL ,
"PRODUCT_IMAGE" BLOB NULL ,
"MIMETYPE" VARCHAR2(255 BYTE) NULL ,
"FILENAME" VARCHAR2(400 BYTE) NULL ,
"IMAGE_LAST_UPDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_PRODUCT_INFO
-- ----------------------------
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('9', 'Mens Shoes', 'Leather upper and lower lace up shoes', 'Mens', 'Y', '110', HexToRawimage/jpeg', 'shoes.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('10', 'Wallet', 'Travel wallet suitable for men and women. Several compartments for credit cards, passports and cash', 'Accessories', 'Y', '50', HexToRaw('FFD8FFE000104A46494600010100000100010000FFDB008400090606100D111214110F101410111510120D0E180E101B101012161C15201412171E1C1F322A23252F1A1E152B3B202F33292E2E38211E31373C2E41262B2C2901090A0A0E0C0D1A0E0F1A29211F242E31293534352D352C2F2C2D342A2D2C29352D2E2C302C3435352F2C2D2C352C293534342C2C2E2A2C29292C2F2C342C2C2CFFC00011080068006803012200021101031101FFC4001B00010002030101000000000000000000000006070405080302FFC4003C1000020102020606070509010000000000000102031104210506071251911322233161A141717281C1D1F0324252B2E1152433437392B1C2F114FFC4001A010100020301000000000000000000000000020301040506FFC4002911010002010203060700000000000000000001020304111221320531336181911334415171B1F0FFDA000C03010002110311003F00BC4000000000000000000000000000000000004635CF5DBF65285B0B52BCA6A527184E0B762B2BBBE6F3F424C8AE136F78497DBC3568B5DF153A6E4BC1EF6E9B1DA953CE83B77A9A6F8DA54ECBCCADF1B80A75976908CBC5AEB2F5359AE7C0AAD7989D9D6D3E8EB97145FEAB5307B5BD1B55673AB0F6A8C9AE70B9B8C26BB68EADF631B42FC255141F2958E64D35808E16A4541CB7651DE49BCD3BB4D5F9195A071B273DD94AF1B773E238E76DC8D1E2B5F839C4FBBAAE9D45249C5A69A4E2D34D34FB9A3E88BECDAA5F47D25F8655E36E0BA49B4B9344A0B22778DDCCC94E0BCD7ED3B000328000000000000209B505D5A0EFF8F2F7D2BBF87BCADE7F5F5F5F3B2B6A5FC3A197DE9F5BFB32E76E45677F2B1AD97BDE8FB3BC184635BD75A93F0A8BCE3F330F404BB55EA667EB8ACA8BF1AABCA9D8D668495AAC7DE663A519E5AAF58745ECAE5FB8FAAAD5F3DD7F126242B64F2BE0A5E15AA71FC34C9A9753A61C7D5F8F7FCC80024D600000000000041F6A4BB2A19FDF92DDE39473E57E6562D967ED4EDD051CBF98F3F77773B157CDFEBE7F23572F53D2767781EA8E6B8BEA52F6E7F951A4D1157B58E68DDEB8BECE97B72FF069745DAF2BC77A495A0B849E4999AF4A9CBF35EDFA744EC7E57C1D5FEBC9F3A7449D95EEC572C1D64DB6E35DABF1EA53F916117D3A5CAD5F3CF69F300049AC000000000000846D6256C351E1D37FA4F32AD9CBF4E6CB935F3576AE90C3C6345C7A4A73E91464ECA6B7649C53F43CFD453B8FC0D5C34DC2B539539ACDC649ABAE2BD0D78ABA3572C4EFBBD0F66DEBF0B877E68D6B7E70A7EDCBF2FF00C35BA0E2B7F3BFA5ACFEBD04C70DA955F4D49D2A152942749749DA39A8CA2F753578C5B59F81E6F641A670D3BFFE58D48AFB4E9E2293CBD52717C912AC4CD1567BD69AAE7E4B2B62B513A1898E79568BE715F14CB1CAE3643A2B138578B8D7C3D5A4A5D04A1BF0B272ED54B778E5BB7F596396D3A5CDD64C4E7B4C7F720004DAA000000000000187A4F4450C5C372BD28D487A1359C5F18BEF4FC558CC01989989DE116D5AD44868DC4D4AB4AACA54EA53DC8D2947AD0774EFBCBBFBB85C9480622223B92BE4B649E2B4EF258006500000000000000000000000000000000000007FFFD9'), 'image/jpeg', 'wallet.jpg', TO_DATE('2018-03-23 23:21:54', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('1', 'Business Shirt', 'Wrinkle-free cotton business shirt', 'Mens', 'Y', '50', HexToRaw('FFD8FFE000104A46494600010100000100010000FFDB00840009060610100F120D12140F130F1210171510141410100F1410101410151614101414171B261E1719231912121F2F2023282C2C2C2C151F31353C2A35262B2C2901090A0A0D0A0D190C0E1A291E1C1829352929292934292C29292934302C3435292929292C3229292C2E30292C2A2929292929292A34342929292A362934293229FFC00011080068006803012200021101031101FFC4001B00000203010101000000000000000000000005020304010706FFC400381000020102030406060A0300000000000000010203110412210531415161718191B1D113162252A1C10632627292A2B2E1F0F1144253FFC40014010100000000000000000000000000000000FFC40014110100000000000000000000000000000000FFDA000C03010002110311003F00F71000000038DD80CD8DDA54E8FD7767C12D5BEC17FAD14F8467F0425C52752ACE6EEEF2D38E9C2DD962FA7B39DAFBBAD80D7D6487B92EF45B4B6FD27BD4A3D6AFE026A5826DB5C8B6585CBBD3F15F003E969D55259934D3E28909F62D55193A775AACCB5E4D2D3BFE0380000000000000000306D1C7BA6D452576AF77C3B05D3AB29272936F46D747616ED377AAD72497CFE6432E8D74018B0352DEC9B65BB4304A8B8BB9BE35565CCDA4B9B028A2E4E4D6693CBBD7A3CA9DD70935AF6335CEAA8ACCC850C5427B9AEADCFAEDBCCB8F9DD018A9576EBA9BD13BAB2E09AD3E23AA1899C773D393D50A30D45B9C5F292F11C4D00D30D5B3C54B7735C9A2D316CD96928F4DFBFF00A368000000000009314AF526FED782488C5D8ED4FAD2FBCFC59D4C0C98DC5C29ABCB7BDD15AB9752153C0E2312D395E953E09DD59756F6FA47F0A714DB495DEF7C7BC9E6E2025AFF0047249274E6EEB726EDF14729CEB474AD09597FB2D7BEDBC76AA0019B096D24ACD741A991549277B24FA34BF5F326C0BF02ED3EB88C05D4349C7AFC50C4000000000004553EB4BEF3FD4C89D9BF6A4BED3FD4CED80132C488E43B18D80924EFC2D6D02DA9240076C409391C881645D9A7C9AF1198AA5B86917749F34074000008CE564DBDC95DF612336D0A96A72E9D3BC04C9712CBD8AA555477FF003F972553556E7A77BB0175395D26F7D89A2BB924C0929ABDB4BF207239955EFC4E30244A2884592B81218619DE11EAF016A66FC14BD8EA6FC6FF003034000000BF6C26E31D6DED6EB2D74180AB6CD4D631E86FBFFA0174AF75C55F57A69F02CBF1E9F995FA65C5A5DA5753190D1668DDB56575CC0D8892650EB1CFF200D2A471B323C747364E3FB5CB3D381A1324999957458AA202D36ECE96925D37EF5FB0BB31B366CBDA6B9AF07FB80C40000059B536142BC94DB926959DB5BAE1D0B880018BD49C33DF9DF6C57C8ED3FA13858C9497A44D3BA7996FEE000362D814FDEABF89791C7F47E973A9F897900010F56695F366AB7FBCBC89FABD4FDEABF8A3E47000EFABF0F7EA77C7C816C08FBF53F2F9000125B157FD2A7E5F22DC2ECEC92CD9E4F4DCD25E00006D00003FFFD9'), 'image/jpeg', 'shirt.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('2', 'Trousers', 'Black trousers suitable for every business man', 'Mens', 'Y', '80', HexToRawimage/jpeg', 'pants.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('3', 'Jacket', 'Fully lined jacket which is both professional and extremely comfortable to wear', 'Mens', 'Y', '150', HexToRawimage/jpeg', 'jacket.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('4', 'Blouse', 'Silk blouse ideal for all business women', 'Womens', 'Y', '60', HexToRaw('FFD8FFE000104A46494600010100000100010000FFDB0084000906061010101512131215141316151214171614181A1417171719161815181C1A121720261F172525191713212F202428292C2D2C171E3135302A3529372C2901090A0A0E0C0E190F0F1A2C241E222D2A2D2F2C3535352C352E2D2F2934292929352B2A2B3535352A2C29292C2A342D2C29342C2D2C2C2C2C292C2C342C2C352CFFC00011080068006803012200021101031101FFC4001C0001000203000300000000000000000000000607030405010208FFC4003710000103020304060806030000000000000100021103041221310741517105061361A1C122233242728191B11492A2A3B2D1526282FFC4001A010100020301000000000000000000000000030602040501FFC400271100020202020003090000000000000000000102030411051221314113224251618191E1F0FFDA000C03010002110311003F00BC5111004444011141FAC1B55B6B5B936EDA6EAA5BED39AE01A1D3184647111067E8BCDE892BAA76BD416C9C22AEAA6D928013F877FE613E22254CBA03AC142F688AD45D2D3A83939A6261CDDC5134CCEDC6B6A5B9C7474D1117A40111100444401111005C3E9DEB8DA599C351E4BE27031A5EE83A4C64D983A90BB657CFDD2DD2A6ADCD4AC7DAA952A3A383412D689F85AD1F258C9E8DEC1C659136A4FC1124EB46D66E1CC70A34FB1A64118DDE95523491193350273EE2A056142BBDA5CF034903780738E3BF7AE81AA5D2665A72EF1CD65B7799D00CA26758EE50B932D3461D54BF70E50E44F70D4ACDD03D64BCB0AC1C3D597000080585B3935EDEEDC7519F195BF6B4435F53862007289F3F058AF28626E1DE41FAEE45226BA88DB1D48B2BA2F6B54B26DCD1753397A74FD630EE397B4DCFE2E6A776B74CAAC6D4638398E01CD70D082A84B6A62A31BC3D1EF22449F35676CDAEBD53E8C9863839B3B83B51F513FF004B38CF6F4CE0721C742A83B6BFC133444529C108888022220305FDD0A549F50890C63DF1C7082EF25F33BEB132749CE3C4F8AFA33ACD6B56AD9D7A5440351F49EC6C9812E1875E44AA3BA5FA917F6F4DCE7DB54710DD698ED47EDCC6BC372C2475F8D9463DB6F4CF4A00B9808C21AE683DFDFE2BDC320653C6777D1712C6EF0B58D20E33220FBB2E20E474D4A945D570D69F467700B5DAD168AAC528ED1A93C0CCC67A2C8FA1886872D0C792F177488C21870983A18CF285B02BBC522E3ED0827CD784DB39D60C753AC448C265E3B88D72E4E2A7BB3CBD06EC86990EA6F197169698F979AAE9B56E2E6E0368D17D47B2A104526927B39D491ECE8333C558DD5DEA5DF50BBA35C06D3A6D3EB18F7CB9C1C0830D6820113C46614B18BDA672B3AFAFD8CE0DADFC8B291114E53C222200888802222028DDA7D916F4D623A3E95178F94B3EED586A36699E454C76B960C9B6AF3E98754A51C5A407EBDC5BFACA81DDDC3832018DC56BD9E65BF8B96F1D337A98070F2FE97B5564D3A83FD4FF006B0503EC99990392DCA6062238823C14475BD0E9EC72CCFE32F2A6EECEDC7CDF2E3FC55B4141F6516EC6DBD53EF9AB0EE4D680DFBB94E56DC7C8A3E7BDE44C2222C8D208888022220088BC140553B55E95C7774E8839526623F13E0F835ADFCCA1784B839DBA16CF58EEFB6BCB8A9C6AD48F85AE2C1FA405AF484D277082B5E4FC4B9E157D298C7E86D3D863271D32E208EF596C6F7161275DEB568BE1E1A4983946FDDC744AB43B27EB91321466FEFD49FECE2F705C56A07DF870E627C89FA2B182A8FABF5B0DD51AA379603C89C3F6255B816C56F68AAF2F574BFB2F897E8222290E38444401111005E095E57822501F383BD22493AB9C4FCCCAF5AD5096963781FB2B96E7661D1EF74863E9F731E437E4D7481C864B09D93F479D7B523876900F380A1E8CB24394A5475A65436D544B49DD9C9D4F32BB97943188CB16A2558CCD96F470F71F1FE38CC7DA7C56C376756000182A40F67D63FD1E466578EB6C9A3CC511F069FF007DCAEFA1AA10583396BDBFC82BA82E359F53ACE910452920C82F739F9F18263C17682CE11EA72391CC8654A2E09AD0444521CC088880222200888802222008888022220088880222203FFFD9'), 'image/jpeg', 'blouse.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('5', 'Skirt', 'Wrinkle free skirt', 'Womens', 'Y', '80', HexToRawimage/jpeg', 'skirt.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('6', 'Ladies Shoes', 'Low heel and cushioned interior for comfort and style in simple yet elegant shoes', 'Womens', 'Y', '120', HexToRawimage/jpeg', 'heels.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('7', 'Belt', 'Leather belt', 'Accessories', 'Y', '30', HexToRawimage/jpeg', 'belt.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "DCM"."DEMO_PRODUCT_INFO" VALUES ('8', 'Bag', 'Unisex bag suitable for carrying laptops with room for many additional items', 'Accessories', 'Y', '125', HexToRaw('FFD8FFE000104A46494600010100000100010000FFDB0084000906061412111514131415131316151B151716171814181512181A1815141B1C1E161A1C261E1819241914161F2F20232A292C2C2F171E3135302A35262B2C2901090A0A0E0C0E170F0F172C1C1C1C2C2C342C292929292929292C2C2C2C2C2C2C29292929292929292C2C292C292929292C292C29292C2C292929292C35292C29FFC00011080068006803012200021101031101FFC4001C0000010501010100000000000000000000000304060708050201FFC40046100001030203040507060B09000000000001000203041105214106071231135161718122425291A1B1D114233293A2C11517435462637292B2D3F0162453647382A3C2D2FFC400160101010100000000000000000000000000000102FFC400191101010100030000000000000000000000000111213141FFDA000C03010002110311003F00BC5789A60C6971E4D049EE02E57B4C31E9B8296777A30C8EF531C7EE4113A2DF561B21B748F60D1CE8DDC27C5B7B78D97521DE661AEE55910FDA25BFC402CD94381C5281F49B90BD8DFDE14830BC368A21F3D46EAA1E936A658C91DAD02C7C08545F876F70FF00CF69BEB59F15F59B7340795653FD633E2A9E6E278735A4438231C7AE698BADE243DDEE509C7A0964771474915330694C5FEDE279B9F00A2B4D9DB2A2FCEA0FAC6FC528CDABA33CAAA0FAD8FE2B28C523864E9DCD3D52464FC57D329D2584FF00B2C7F855C46B11B454D7B7CA20BFFAB1FF00E97C7ED2D28C8D4C008D3A58EFEABACC786C14EF67CF4B58E7E8DA786011839FE51F25CE9E68F14DDDB2A6491C58E9238BCDE91C1EF03B4B4347A87AD06963B7F41D23221531BA491E23635A788B9CE3C20642DCCA902CC7B25B32D8710A325E5EFF009543C8587D369E67DCB4E05142108440B89B6D2F0E1D567FCB4BED8DC3EF5DB518DE6CFC184D59FD491FBC437EF419DE9CBA2601C1F481B125A01B5AFAE5CC7AD23F87C8C88B5B4BA5057F14638B87C9BF55FD7D592468AAF879B1A7BC2AA5A3DA72340BD9DA4CCD80CF4CF2F6250BDA73E065FB8251D4CC78B88D808D2D9140D7FB400F300FB7DE1291E3510F31BEA197B126E8870348863CC751CFDB9242091872E8197EBCFE283A916D3B75B04A3B69A2E77CD730D3869CE08DC3BDD7F7A467E0360210DF177C532096ECF4FD257D1DB3FEF515CD9E39383B50068B450599F09DB110D4529783D0C52B5C7845DFE4E595F99CFDAB4950D63658D9230DD8F687B4D88BB5C0381B1CC64543C2E8421102AC77CFB4AE6D2CB4CD85EE6BBA3E965360C602EE36B46772E3D19F515672A3F7D78D033BA9D84969E8BA5F45AF6F191E6E4EB39BCCF9DCB552AC560D8C3B88736DEE0256E2E99B64B725EC3C95A0F2C4794DD74EA4AC789581EBB1F726AC9085F248C104806E02A3AD455CC735A350125554FAB466B90C8C8B1053B6E22F1CD40E63AA3A85E2595A73D5349B102ED2C5367D41B141D8D89A26546274B0CAD0F8DF210E69E4E1C2E247B15E3B19B42E8AA64A09448F6B669194F396D9B270B448E61232E30093965D8059533BA8F2B19A3EC738FAA294AB77656432E335ADCCC74D248F06DE7CE218F2CF9010483BC958B39D6A75CAC64210B4C059837BE0B719AB00901DD1B8804D8FCCC5CC6BC8AD3EB386FAA90B7187B88CA48A3703D766F07BD85042298129CC51A4A38C8E495634AD2968E1CF34EE3918D06FCB84F8260E04F5F82F0EA736E45076592C190245D7A73A1B5B22B8DF213E89F7AF0EA6B6847AD4C0F6AA9A3232365C7A88ED9258C2742937B0EAA8956E5A3BE334FDD29FF8645696E71DD2CB8A5569356900F586F1B87B250AA2DDD55982AA59B97434953203D44445ADFB4E03C55EDBA2D9F7D261913246F048F2E95E0F305C6C2FDBC0D6ACA266842100A0DBD5D82FC214E1F101F2986E63FD634E6E8C9EDB022FA8ED2A7284198309ABA2638475B47302D3C2F7C7348D7B48C8DE176BD6010AD7C3374F85D444D9617CCF8DE2ED736677B88C88E441CC275BCEDDEB6B2333C2D1F2A60BD87E5DA3CD3D6F03E89F0E445A07BA9DAE34B58DA671F99A8706D8F9921C9AE034B9B34F78EA544DDFB8EA13C9F523BA469F7B0A4BF11547FE3557EF45FCB5642134571F88CA4D2A2AC773A1FE5A6357B8B1F92AD947648C6BC7D92D56AA14148546E2EAC5F867A77F789597FB2E5CAAADCD622DE51C527EC4ADFF00BF0AD08B9BB43B4115153BE799D663472F39EED1AD1AB89FEACAE8CEB0EC45532B22A49A3313AA0B5A47131C7A1E36979F21C6C2CC3CFD12B4DB459561BB085F5D53362738F2892C8FA9B95886F635966DF52E72B41281084280421080545EF6B64CD25632B211C31CAF0E36E51CC0F178715B887687762BD133C5F098EA617C32B7898F162351A820E841CC1409E038BB6AA9E399BC9ED048F45DC9C3C1D71E0BA0AB1C322A8C124735E1D3D03DD7E91A2E62D2EE68FA26D607CD361620E4AC7A2AE64CC6C91B9AF6385C39A6E0FF005D4817422EA05B73BD982883A386D5153CB85A7C88CFE9B86BFA233EE4123DA9DADA7C3E132CEFB68D60CDF21EA6B75EFE435547B66ACDA5AE0338A9A33736B98E9D87D8F95D6CBAFB00C9CE0FBBCC43199FE535CF7C309F39C2CF7379F0C511FA2DED396B672BBF00D9F868E16C34EC0C8DBEB71D5CE773738F59452D846151D342C8626F0C71B785A35EF27524DC93D653C42110210840210840210841F085C49F63E024BA2E9299EECCBA9DEE8B88F5960F21C7B4B4A10819D5EC13651C32D65748D3CDA660D69EF0C636E97C1B602869487454ECE31C9EEBBDC3B8B89E1F0B2108242842100842100842107FFFD9'), 'image/jpeg', 'bag.jpg', TO_DATE('2018-03-23 23:21:53', 'YYYY-MM-DD HH24:MI:SS'));

-- ----------------------------
-- Table structure for DEMO_STATES
-- ----------------------------
DROP TABLE "DCM"."DEMO_STATES";
CREATE TABLE "DCM"."DEMO_STATES" (
"ST" VARCHAR2(30 BYTE) NULL ,
"STATE_NAME" VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_STATES
-- ----------------------------
INSERT INTO "DCM"."DEMO_STATES" VALUES ('AK', 'ALASKA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('AL', 'ALABAMA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('AR', 'ARKANSAS');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('AZ', 'ARIZONA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('CA', 'CALIFORNIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('CO', 'COLORADO');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('CT', 'CONNECTICUT');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('DC', 'DISTRICT OF COLUMBIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('DE', 'DELAWARE');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('FL', 'FLORIDA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('GA', 'GEORGIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('HI', 'HAWAII');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('IA', 'IOWA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('ID', 'IDAHO');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('IL', 'ILLINOIS');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('IN', 'INDIANA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('KS', 'KANSAS');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('KY', 'KENTUCKY');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('LA', 'LOUISIANA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MA', 'MASSACHUSETTS');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MD', 'MARYLAND');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('ME', 'MAINE');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MI', 'MICHIGAN');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MN', 'MINNESOTA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MO', 'MISSOURI');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MS', 'MISSISSIPPI');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('MT', 'MONTANA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NC', 'NORTH CAROLINA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('ND', 'NORTH DAKOTA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NE', 'NEBRASKA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NH', 'NEW HAMPSHIRE');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NJ', 'NEW JERSEY');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NM', 'NEW MEXICO');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NV', 'NEVADA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('NY', 'NEW YORK');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('OH', 'OHIO');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('OK', 'OKLAHOMA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('OR', 'OREGON');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('PA', 'PENNSYLVANIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('RI', 'RHODE ISLAND');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('SC', 'SOUTH CAROLINA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('SD', 'SOUTH DAKOTA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('TN', 'TENNESSEE');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('TX', 'TEXAS');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('UT', 'UTAH');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('VA', 'VIRGINIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('VT', 'VERMONT');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('WA', 'WASHINGTON');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('WI', 'WISCONSIN');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('WV', 'WEST VIRGINIA');
INSERT INTO "DCM"."DEMO_STATES" VALUES ('WY', 'WYOMING');

-- ----------------------------
-- Table structure for DEMO_USERS
-- ----------------------------
DROP TABLE "DCM"."DEMO_USERS";
CREATE TABLE "DCM"."DEMO_USERS" (
"USER_ID" NUMBER NOT NULL ,
"USER_NAME" VARCHAR2(100 BYTE) NULL ,
"PASSWORD" VARCHAR2(4000 BYTE) NULL ,
"CREATED_ON" DATE NULL ,
"QUOTA" NUMBER NULL ,
"PRODUCTS" CHAR(1 BYTE) NULL ,
"EXPIRES_ON" DATE NULL ,
"ADMIN_USER" CHAR(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEMO_USERS
-- ----------------------------
INSERT INTO "DCM"."DEMO_USERS" VALUES ('1', 'ADMIN', '655129752162D4F26589E9C1C7C3721A', TO_DATE('2018-03-23 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), null, 'Y', null, 'Y');
INSERT INTO "DCM"."DEMO_USERS" VALUES ('2', 'DEMO', 'DB2DC151EC0951B687FB5899EB5E983D', TO_DATE('2018-03-23 23:21:54', 'YYYY-MM-DD HH24:MI:SS'), '15000', 'Y', null, 'N');

-- ----------------------------
-- Table structure for DEPT
-- ----------------------------
DROP TABLE "DCM"."DEPT";
CREATE TABLE "DCM"."DEPT" (
"DEPTNO" NUMBER(2) NOT NULL ,
"DNAME" VARCHAR2(14 BYTE) NULL ,
"LOC" VARCHAR2(13 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of DEPT
-- ----------------------------
INSERT INTO "DCM"."DEPT" VALUES ('10', 'ACCOUNTING', 'NEW YORK');
INSERT INTO "DCM"."DEPT" VALUES ('20', 'RESEARCH', 'DALLAS');
INSERT INTO "DCM"."DEPT" VALUES ('30', 'SALES', 'CHICAGO');
INSERT INTO "DCM"."DEPT" VALUES ('40', 'OPERATIONS', 'BOSTON');

-- ----------------------------
-- Table structure for EMP
-- ----------------------------
DROP TABLE "DCM"."EMP";
CREATE TABLE "DCM"."EMP" (
"EMPNO" NUMBER(4) NOT NULL ,
"ENAME" VARCHAR2(10 BYTE) NULL ,
"JOB" VARCHAR2(9 BYTE) NULL ,
"MGR" NUMBER(4) NULL ,
"HIREDATE" DATE NULL ,
"SAL" NUMBER(7,2) NULL ,
"COMM" NUMBER(7,2) NULL ,
"DEPTNO" NUMBER(2) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Records of EMP
-- ----------------------------
INSERT INTO "DCM"."EMP" VALUES ('7839', 'KING', 'PRESIDENT', null, TO_DATE('1981-11-17 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '5000', null, '10');
INSERT INTO "DCM"."EMP" VALUES ('7698', 'BLAKE', 'MANAGER', '7839', TO_DATE('1981-05-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '2850', null, '30');
INSERT INTO "DCM"."EMP" VALUES ('7782', 'CLARK', 'MANAGER', '7839', TO_DATE('1981-06-09 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '2450', null, '10');
INSERT INTO "DCM"."EMP" VALUES ('7566', 'JONES', 'MANAGER', '7839', TO_DATE('1981-04-02 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '2975', null, '20');
INSERT INTO "DCM"."EMP" VALUES ('7788', 'SCOTT', 'ANALYST', '7566', TO_DATE('1982-12-09 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '3000', null, '20');
INSERT INTO "DCM"."EMP" VALUES ('7902', 'FORD', 'ANALYST', '7566', TO_DATE('1981-12-03 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '3000', null, '20');
INSERT INTO "DCM"."EMP" VALUES ('7369', 'SMITH', 'CLERK', '7902', TO_DATE('1980-12-17 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '800', null, '20');
INSERT INTO "DCM"."EMP" VALUES ('7499', 'ALLEN', 'SALESMAN', '7698', TO_DATE('1981-02-20 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1600', '300', '30');
INSERT INTO "DCM"."EMP" VALUES ('7521', 'WARD', 'SALESMAN', '7698', TO_DATE('1981-02-22 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1250', '500', '30');
INSERT INTO "DCM"."EMP" VALUES ('7654', 'MARTIN', 'SALESMAN', '7698', TO_DATE('1981-09-28 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1250', '1400', '30');
INSERT INTO "DCM"."EMP" VALUES ('7844', 'TURNER', 'SALESMAN', '7698', TO_DATE('1981-09-08 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1500', '0', '30');
INSERT INTO "DCM"."EMP" VALUES ('7876', 'ADAMS', 'CLERK', '7788', TO_DATE('1983-01-12 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1100', null, '20');
INSERT INTO "DCM"."EMP" VALUES ('7900', 'JAMES', 'CLERK', '7698', TO_DATE('1981-12-03 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '950', null, '30');
INSERT INTO "DCM"."EMP" VALUES ('7934', 'MILLER', 'CLERK', '7782', TO_DATE('1982-01-23 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), '1300', null, '10');

-- ----------------------------
-- Table structure for JOB_INFO
-- ----------------------------
DROP TABLE "DCM"."JOB_INFO";
CREATE TABLE "DCM"."JOB_INFO" (
"ID" NUMBER(20) NOT NULL ,
"JOB_TITLE" VARCHAR2(255 BYTE) NULL ,
"JOB_CONTENT" VARCHAR2(500 BYTE) NULL ,
"JOB_TYPE_NO" VARCHAR2(4 BYTE) NULL ,
"JOB_HAS_ANNEX" NUMBER(1) DEFAULT 1  NULL ,
"JOB_ANNEX_URL" VARCHAR2(255 BYTE) NULL ,
"CREATE_BY" NUMBER(20) NULL ,
"CREATE_TIME" DATE DEFAULT sysdate  NULL ,
"UPDATE_BY" NUMBER(20) NULL ,
"UPDATE_TIME" DATE DEFAULT sysdate  NULL ,
"MONEY" NUMBER(6,2) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."JOB_INFO"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."JOB_INFO"."JOB_TITLE" IS '工作流标题';
COMMENT ON COLUMN "DCM"."JOB_INFO"."JOB_CONTENT" IS '工作流内容主体';
COMMENT ON COLUMN "DCM"."JOB_INFO"."JOB_TYPE_NO" IS '工作流类型编号（0000-9999）';
COMMENT ON COLUMN "DCM"."JOB_INFO"."JOB_HAS_ANNEX" IS '1:没有附件，2:有附件';
COMMENT ON COLUMN "DCM"."JOB_INFO"."JOB_ANNEX_URL" IS '附件地址（暂时只支持一个附件）';
COMMENT ON COLUMN "DCM"."JOB_INFO"."CREATE_BY" IS '创建人';
COMMENT ON COLUMN "DCM"."JOB_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "DCM"."JOB_INFO"."UPDATE_BY" IS '修改人';
COMMENT ON COLUMN "DCM"."JOB_INFO"."UPDATE_TIME" IS '修改时间';
COMMENT ON COLUMN "DCM"."JOB_INFO"."MONEY" IS '金额';

-- ----------------------------
-- Records of JOB_INFO
-- ----------------------------

-- ----------------------------
-- Table structure for JOB_PROCESS
-- ----------------------------
DROP TABLE "DCM"."JOB_PROCESS";
CREATE TABLE "DCM"."JOB_PROCESS" (
"ID" NUMBER(20) NOT NULL ,
"PREV" NUMBER(20) NULL ,
"NEXT" NUMBER(20) NULL ,
"STATUS" NUMBER(1) DEFAULT 1  NULL ,
"CREATE_BY" NUMBER(20) NULL ,
"CREATE_TIME" DATE DEFAULT sysdate  NULL ,
"UPDATE_BY" NUMBER(20) NULL ,
"UPDATE_TIME" DATE DEFAULT sysdate  NULL ,
"JOB_ID" NUMBER(20) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."PREV" IS '上一位人员(如果刚开始，就是发起者)';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."NEXT" IS '下一位人员(如果是完成工作流，就是发起者)';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."STATUS" IS '（1创建，2拒绝，3打回，4通过，5提交给上级；1-99）';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."CREATE_BY" IS '创建人';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."UPDATE_BY" IS '修改人';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."UPDATE_TIME" IS '修改时间';
COMMENT ON COLUMN "DCM"."JOB_PROCESS"."JOB_ID" IS '工作流id';

-- ----------------------------
-- Records of JOB_PROCESS
-- ----------------------------

-- ----------------------------
-- Table structure for JOB_TYPE
-- ----------------------------
DROP TABLE "DCM"."JOB_TYPE";
CREATE TABLE "DCM"."JOB_TYPE" (
"ID" NUMBER(20) NOT NULL ,
"TYPE_NO" VARCHAR2(4 BYTE) NOT NULL ,
"TYPE_NAME" VARCHAR2(50 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."JOB_TYPE"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."JOB_TYPE"."TYPE_NO" IS '工作流类型编号(0001-9999)';
COMMENT ON COLUMN "DCM"."JOB_TYPE"."TYPE_NAME" IS '工作流类型名称';

-- ----------------------------
-- Records of JOB_TYPE
-- ----------------------------
INSERT INTO "DCM"."JOB_TYPE" VALUES ('1', '0001', '借支');

-- ----------------------------
-- Table structure for PROCESS_TYPE
-- ----------------------------
DROP TABLE "DCM"."PROCESS_TYPE";
CREATE TABLE "DCM"."PROCESS_TYPE" (
"ID" NUMBER(20) NOT NULL ,
"TYPE_VALUE" NUMBER NOT NULL ,
"TYPE_NAME" VARCHAR2(50 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."PROCESS_TYPE"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."PROCESS_TYPE"."TYPE_VALUE" IS '(待处理，打回，通过，拒绝等状态，1-99)';
COMMENT ON COLUMN "DCM"."PROCESS_TYPE"."TYPE_NAME" IS '状态名';

-- ----------------------------
-- Records of PROCESS_TYPE
-- ----------------------------
INSERT INTO "DCM"."PROCESS_TYPE" VALUES ('1', '1', '创建');
INSERT INTO "DCM"."PROCESS_TYPE" VALUES ('5', '5', '提交给上级');
INSERT INTO "DCM"."PROCESS_TYPE" VALUES ('4', '4', '通过');
INSERT INTO "DCM"."PROCESS_TYPE" VALUES ('3', '3', '打回');
INSERT INTO "DCM"."PROCESS_TYPE" VALUES ('2', '2', '拒绝');

-- ----------------------------
-- Table structure for ROLE_INFO
-- ----------------------------
DROP TABLE "DCM"."ROLE_INFO";
CREATE TABLE "DCM"."ROLE_INFO" (
"ID" NUMBER(20) NOT NULL ,
"ROLE_NAME" VARCHAR2(50 BYTE) NOT NULL ,
"ROLE_LEVEL" NUMBER(3) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."ROLE_INFO"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."ROLE_INFO"."ROLE_NAME" IS '角色名';
COMMENT ON COLUMN "DCM"."ROLE_INFO"."ROLE_LEVEL" IS '角色等级(1-99，1为最高级)';

-- ----------------------------
-- Records of ROLE_INFO
-- ----------------------------
INSERT INTO "DCM"."ROLE_INFO" VALUES ('1', '老板', '1');
INSERT INTO "DCM"."ROLE_INFO" VALUES ('2', '经理', '2');
INSERT INTO "DCM"."ROLE_INFO" VALUES ('3', '员工', '3');

-- ----------------------------
-- Table structure for USER_INFO
-- ----------------------------
DROP TABLE "DCM"."USER_INFO";
CREATE TABLE "DCM"."USER_INFO" (
"ID" NUMBER(20) NOT NULL ,
"USER_NAME" VARCHAR2(50 BYTE) NOT NULL ,
"USER_PWD" VARCHAR2(50 BYTE) NOT NULL ,
"USER_NICK_NAME" VARCHAR2(255 BYTE) NOT NULL ,
"CREATE_TIME" DATE DEFAULT sysdate  NOT NULL ,
"UPDATE_TIME" DATE DEFAULT sysdate  NOT NULL ,
"ROLE_ID" NUMBER(20) DEFAULT NULL  NOT NULL ,
"HIGH_USER_ID" NUMBER(20) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "DCM"."USER_INFO"."ID" IS '主键';
COMMENT ON COLUMN "DCM"."USER_INFO"."USER_NAME" IS '用户名';
COMMENT ON COLUMN "DCM"."USER_INFO"."USER_PWD" IS '用户密码';
COMMENT ON COLUMN "DCM"."USER_INFO"."USER_NICK_NAME" IS '用户昵称';
COMMENT ON COLUMN "DCM"."USER_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "DCM"."USER_INFO"."UPDATE_TIME" IS '修改时间';
COMMENT ON COLUMN "DCM"."USER_INFO"."ROLE_ID" IS '角色id';
COMMENT ON COLUMN "DCM"."USER_INFO"."HIGH_USER_ID" IS '领导id';

-- ----------------------------
-- Records of USER_INFO
-- ----------------------------
INSERT INTO "DCM"."USER_INFO" VALUES ('1', 'boss', 'boss', '马云老板', TO_DATE('2018-03-24 18:24:54', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2018-03-24 18:24:54', 'YYYY-MM-DD HH24:MI:SS'), '1', '0');
INSERT INTO "DCM"."USER_INFO" VALUES ('2', 'ma', 'ma', '张小龙经理', TO_DATE('2018-03-25 11:51:46', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2018-03-25 11:51:46', 'YYYY-MM-DD HH24:MI:SS'), '2', '1');
INSERT INTO "DCM"."USER_INFO" VALUES ('3', 'emp', 'emp', '求伯君员工', TO_DATE('2018-03-25 11:52:53', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2018-03-25 11:52:53', 'YYYY-MM-DD HH24:MI:SS'), '3', '2');

-- ----------------------------
-- Function structure for CUSTOM_AUTH
-- ----------------------------
CREATE OR REPLACE function "DCM"."CUSTOM_AUTH" (p_username in VARCHAR2, p_password in VARCHAR2)
return BOOLEAN
is
  l_password varchar2(4000);
  l_stored_password varchar2(4000);
  l_expires_on date;
  l_count number;
begin
-- First, check to see if the user is in the user table
select count(*) into l_count from demo_users where user_name = p_username;
if l_count > 0 then
  -- First, we fetch the stored hashed password & expire date
  select password, expires_on into l_stored_password, l_expires_on
   from demo_users where user_name = p_username;

  -- Next, we check to see if the user's account is expired
  -- If it is, return FALSE
  if l_expires_on > sysdate or l_expires_on is null then

    -- If the account is not expired, we have to apply the custom hash
    -- function to the password
    l_password := custom_hash(p_username, p_password);

    -- Finally, we compare them to see if they are the same and return
    -- either TRUE or FALSE
    if l_password = l_stored_password then
      return true;
    else
      return false;
    end if;
  else
    return false;
  end if;
else
  -- The username provided is not in the DEMO_USERS table
  return false;
end if;
end;
/

-- ----------------------------
-- Function structure for CUSTOM_HASH
-- ----------------------------
CREATE OR REPLACE function "DCM"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := '57SUMA8ILOI3UQOWZQ1ADX76GXX6Q4';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;
/

-- ----------------------------
-- Sequence structure for DEMO_CUST_SEQ
-- ----------------------------
DROP SEQUENCE "DCM"."DEMO_CUST_SEQ";
CREATE SEQUENCE "DCM"."DEMO_CUST_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for DEMO_ORD_SEQ
-- ----------------------------
DROP SEQUENCE "DCM"."DEMO_ORD_SEQ";
CREATE SEQUENCE "DCM"."DEMO_ORD_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 11
 CACHE 20;

-- ----------------------------
-- Sequence structure for DEMO_ORDER_ITEMS_SEQ
-- ----------------------------
DROP SEQUENCE "DCM"."DEMO_ORDER_ITEMS_SEQ";
CREATE SEQUENCE "DCM"."DEMO_ORDER_ITEMS_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 61
 CACHE 20;

-- ----------------------------
-- Sequence structure for DEMO_PROD_SEQ
-- ----------------------------
DROP SEQUENCE "DCM"."DEMO_PROD_SEQ";
CREATE SEQUENCE "DCM"."DEMO_PROD_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for DEMO_USERS_SEQ
-- ----------------------------
DROP SEQUENCE "DCM"."DEMO_USERS_SEQ";
CREATE SEQUENCE "DCM"."DEMO_USERS_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_JOB_INFO
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_JOB_INFO";
CREATE SEQUENCE "DCM"."SEQ_JOB_INFO"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 101
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_JOB_PROCESS
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_JOB_PROCESS";
CREATE SEQUENCE "DCM"."SEQ_JOB_PROCESS"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 147
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_JOB_TYPE
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_JOB_TYPE";
CREATE SEQUENCE "DCM"."SEQ_JOB_TYPE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 3
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_PROCESS_TYPE
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_PROCESS_TYPE";
CREATE SEQUENCE "DCM"."SEQ_PROCESS_TYPE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 7
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_ROLE_INFO
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_ROLE_INFO";
CREATE SEQUENCE "DCM"."SEQ_ROLE_INFO"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 4
 NOCACHE ;

-- ----------------------------
-- Sequence structure for SEQ_USER_INFO
-- ----------------------------
DROP SEQUENCE "DCM"."SEQ_USER_INFO";
CREATE SEQUENCE "DCM"."SEQ_USER_INFO"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 4
 NOCACHE ;

-- ----------------------------
-- Indexes structure for table APEX$_ACL
-- ----------------------------
CREATE INDEX "DCM"."APEX$_ACL_IDX1"
ON "DCM"."APEX$_ACL" ("WS_APP_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_ACL
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_ACL_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_ACL" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
    --
    -- maintain pk and timestamps
    --
    :new.username := upper(:new.username);
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_ACL
-- ----------------------------
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK (priv in ('R','C','A'));
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("USERNAME" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("PRIV" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_ACL" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_ACL
-- ----------------------------
ALTER TABLE "DCM"."APEX$_ACL" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_FILES
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_FILES_IDX1"
ON "DCM"."APEX$_WS_FILES" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC, "ROW_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "DCM"."APEX$_WS_FILES_IDX2"
ON "DCM"."APEX$_WS_FILES" ("WS_APP_ID" ASC, "WEBPAGE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_WS_FILES
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_FILES_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_FILES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting and :new.image_alias is null then
        :new.image_alias := :new.name;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.content_last_update := sysdate;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(length(:new.content),0) <> nvl(length(:old.content),0) then
            :new.content_last_update := sysdate;
        end if;
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_WS_FILES
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE'));
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK ("NAME" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK ("MIME_TYPE" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_FILES
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_HISTORY
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_HISTORY_IDX"
ON "DCM"."APEX$_WS_HISTORY" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC, "ROW_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table APEX$_WS_HISTORY
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_HISTORY" ADD CHECK ("ROW_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_HISTORY" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_HISTORY" ADD CHECK ("DATA_GRID_ID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table APEX$_WS_LINKS
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_LINKS_IDX1"
ON "DCM"."APEX$_WS_LINKS" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC, "ROW_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "DCM"."APEX$_WS_LINKS_IDX2"
ON "DCM"."APEX$_WS_LINKS" ("WS_APP_ID" ASC, "WEBPAGE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_WS_LINKS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_LINKS_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_LINKS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_WS_LINKS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE'));
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK (show_on_homepage in ('Y','N'));
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK ("LINK_NAME" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK ("URL" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_LINKS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_NOTES
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_NOTES_IDX1"
ON "DCM"."APEX$_WS_NOTES" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC, "ROW_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "DCM"."APEX$_WS_NOTES_IDX2"
ON "DCM"."APEX$_WS_NOTES" ("WS_APP_ID" ASC, "WEBPAGE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_WS_NOTES
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_NOTES_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_NOTES" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_WS_NOTES
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE'));
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_NOTES
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_ROWS
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_ROWS_IDX"
ON "DCM"."APEX$_WS_ROWS" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_WS_ROWS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_ROWS_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_ROWS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
declare
    l_tag_list apex_application_global.vc_arr2;
    type col_arr is table of varchar2(32767) index by varchar2(255);
    la_col_label col_arr;
    procedure datagrid_logging( 
        p_row_id       in number,
        p_ws_app_id    in number,
        p_data_grid_id in number,
        p_col_name     in varchar2,
        p_type         in varchar2,
        p_old_c        in varchar2 default null,
        p_new_c        in varchar2 default null,
        p_old_d        in date default null,
        p_new_d        in date default null,
        p_old_n        in number default null,
        p_new_n        in number default null)
    is
    begin
        case p_type
        when 'C' then
          if (p_old_c is null and p_new_c is not null) or (p_old_c is not null and p_new_c is null) or (p_old_c != p_new_c) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value, new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_c, p_new_c, sysdate, v('APP_USER'));
          end if;
        when 'D' then
          if (p_old_d is null and p_new_d is not null) or (p_old_d is not null and p_new_d is null) or (p_old_d != p_new_d) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_d, p_new_d, sysdate, v('APP_USER'));
        	  end if;
        when 'N' then
          if (p_old_n is null and p_new_n is not null) or (p_old_n is not null and p_new_n is null) or (p_old_n != p_new_n) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_n, p_new_n, sysdate, v('APP_USER'));
          end if;
        end case;
    end datagrid_logging;
    procedure wa( p_c in out nocopy clob, p_buf in varchar2 )
    is
    l_lf varchar2(2) := unistr('\000a');
    begin
    if p_buf is not null then dbms_lob.writeappend( p_c, length(p_buf||l_lf), upper(p_buf)||l_lf); end if;
    end wa;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.load_order from dual;
        :new.change_count := 0;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.change_count := :old.change_count + 1;
    end if;
    --
    -- inserting remove chr 13
    --
    if instr(:new.c001,chr(13)) > 0 then :new.c001 := replace(:new.c001,chr(13),null); end if;
    if instr(:new.c002,chr(13)) > 0 then :new.c002 := replace(:new.c002,chr(13),null); end if;
    if instr(:new.c003,chr(13)) > 0 then :new.c003 := replace(:new.c003,chr(13),null); end if;
    if instr(:new.c004,chr(13)) > 0 then :new.c004 := replace(:new.c004,chr(13),null); end if;
    if instr(:new.c005,chr(13)) > 0 then :new.c005 := replace(:new.c005,chr(13),null); end if;
    if instr(:new.c006,chr(13)) > 0 then :new.c006 := replace(:new.c006,chr(13),null); end if;
    if instr(:new.c007,chr(13)) > 0 then :new.c007 := replace(:new.c007,chr(13),null); end if;
    if instr(:new.c008,chr(13)) > 0 then :new.c008 := replace(:new.c008,chr(13),null); end if;
    if instr(:new.c009,chr(13)) > 0 then :new.c009 := replace(:new.c009,chr(13),null); end if;
    if instr(:new.c010,chr(13)) > 0 then :new.c010 := replace(:new.c010,chr(13),null); end if;
    if instr(:new.c011,chr(13)) > 0 then :new.c011 := replace(:new.c011,chr(13),null); end if;
    if instr(:new.c012,chr(13)) > 0 then :new.c012 := replace(:new.c012,chr(13),null); end if;
    if instr(:new.c013,chr(13)) > 0 then :new.c013 := replace(:new.c013,chr(13),null); end if;
    if instr(:new.c014,chr(13)) > 0 then :new.c014 := replace(:new.c014,chr(13),null); end if;
    if instr(:new.c015,chr(13)) > 0 then :new.c015 := replace(:new.c015,chr(13),null); end if;
    if instr(:new.c016,chr(13)) > 0 then :new.c016 := replace(:new.c016,chr(13),null); end if;
    if instr(:new.c017,chr(13)) > 0 then :new.c017 := replace(:new.c017,chr(13),null); end if;
    if instr(:new.c018,chr(13)) > 0 then :new.c018 := replace(:new.c018,chr(13),null); end if;
    if instr(:new.c019,chr(13)) > 0 then :new.c019 := replace(:new.c019,chr(13),null); end if;
    if instr(:new.c020,chr(13)) > 0 then :new.c020 := replace(:new.c010,chr(23),null); end if;
    if instr(:new.c021,chr(13)) > 0 then :new.c021 := replace(:new.c001,chr(23),null); end if;
    if instr(:new.c022,chr(13)) > 0 then :new.c022 := replace(:new.c002,chr(23),null); end if;
    if instr(:new.c023,chr(13)) > 0 then :new.c023 := replace(:new.c003,chr(23),null); end if;
    if instr(:new.c024,chr(13)) > 0 then :new.c024 := replace(:new.c004,chr(23),null); end if;
    if instr(:new.c025,chr(13)) > 0 then :new.c025 := replace(:new.c005,chr(23),null); end if;
    if instr(:new.c026,chr(13)) > 0 then :new.c026 := replace(:new.c006,chr(23),null); end if;
    if instr(:new.c027,chr(13)) > 0 then :new.c027 := replace(:new.c007,chr(23),null); end if;
    if instr(:new.c028,chr(13)) > 0 then :new.c028 := replace(:new.c008,chr(23),null); end if;
    if instr(:new.c029,chr(13)) > 0 then :new.c029 := replace(:new.c009,chr(23),null); end if;
    if instr(:new.c030,chr(13)) > 0 then :new.c030 := replace(:new.c030,chr(13),null); end if;
    if instr(:new.c031,chr(13)) > 0 then :new.c031 := replace(:new.c031,chr(13),null); end if;
    if instr(:new.c032,chr(13)) > 0 then :new.c032 := replace(:new.c032,chr(13),null); end if;
    if instr(:new.c033,chr(13)) > 0 then :new.c033 := replace(:new.c033,chr(13),null); end if;
    if instr(:new.c034,chr(13)) > 0 then :new.c034 := replace(:new.c034,chr(13),null); end if;
    if instr(:new.c035,chr(13)) > 0 then :new.c035 := replace(:new.c035,chr(13),null); end if;
    if instr(:new.c036,chr(13)) > 0 then :new.c036 := replace(:new.c036,chr(13),null); end if;
    if instr(:new.c037,chr(13)) > 0 then :new.c037 := replace(:new.c037,chr(13),null); end if;
    if instr(:new.c038,chr(13)) > 0 then :new.c038 := replace(:new.c038,chr(13),null); end if;
    if instr(:new.c039,chr(13)) > 0 then :new.c039 := replace(:new.c039,chr(13),null); end if;
    if instr(:new.c040,chr(13)) > 0 then :new.c040 := replace(:new.c040,chr(13),null); end if;
    if instr(:new.c041,chr(13)) > 0 then :new.c041 := replace(:new.c041,chr(13),null); end if;
    if instr(:new.c042,chr(13)) > 0 then :new.c042 := replace(:new.c042,chr(13),null); end if;
    if instr(:new.c043,chr(13)) > 0 then :new.c043 := replace(:new.c043,chr(13),null); end if;
    if instr(:new.c044,chr(13)) > 0 then :new.c044 := replace(:new.c044,chr(13),null); end if;
    if instr(:new.c045,chr(13)) > 0 then :new.c045 := replace(:new.c045,chr(13),null); end if;
    if instr(:new.c046,chr(13)) > 0 then :new.c046 := replace(:new.c046,chr(13),null); end if;
    if instr(:new.c047,chr(13)) > 0 then :new.c047 := replace(:new.c047,chr(13),null); end if;
    if instr(:new.c048,chr(13)) > 0 then :new.c048 := replace(:new.c048,chr(13),null); end if;
    if instr(:new.c049,chr(13)) > 0 then :new.c049 := replace(:new.c049,chr(13),null); end if;
    if instr(:new.c050,chr(13)) > 0 then :new.c050 := replace(:new.c050,chr(13),null); end if;
    if :new.search_clob is null then
        dbms_lob.createtemporary( :new.search_clob, false, dbms_lob.session );
    else
        dbms_lob.trim( :new.search_clob, 0 );
    end if;
    wa(:new.search_clob,:new.c001);wa(:new.search_clob,:new.c002);wa(:new.search_clob,:new.c003);
    wa(:new.search_clob,:new.c004);wa(:new.search_clob,:new.c005);wa(:new.search_clob,:new.c006);
    wa(:new.search_clob,:new.c007);wa(:new.search_clob,:new.c008);wa(:new.search_clob,:new.c009);
    wa(:new.search_clob,:new.c010);wa(:new.search_clob,:new.c011);wa(:new.search_clob,:new.c012);
    wa(:new.search_clob,:new.c013);wa(:new.search_clob,:new.c014);wa(:new.search_clob,:new.c015);
    wa(:new.search_clob,:new.c016);wa(:new.search_clob,:new.c017);wa(:new.search_clob,:new.c018);
    wa(:new.search_clob,:new.c019);wa(:new.search_clob,:new.c020);wa(:new.search_clob,:new.c021);
    wa(:new.search_clob,:new.c022);wa(:new.search_clob,:new.c023);wa(:new.search_clob,:new.c024);
    wa(:new.search_clob,:new.c025);wa(:new.search_clob,:new.c026);wa(:new.search_clob,:new.c027);
    wa(:new.search_clob,:new.c028);wa(:new.search_clob,:new.c029);wa(:new.search_clob,:new.c030);
    wa(:new.search_clob,:new.c031);wa(:new.search_clob,:new.c032);wa(:new.search_clob,:new.c033);
    wa(:new.search_clob,:new.c034);wa(:new.search_clob,:new.c035);wa(:new.search_clob,:new.c036);
    wa(:new.search_clob,:new.c037);wa(:new.search_clob,:new.c038);wa(:new.search_clob,:new.c039);
    wa(:new.search_clob,:new.c040);wa(:new.search_clob,:new.c041);wa(:new.search_clob,:new.c042);
    wa(:new.search_clob,:new.c043);wa(:new.search_clob,:new.c044);wa(:new.search_clob,:new.c045);
    wa(:new.search_clob,:new.c046);wa(:new.search_clob,:new.c047);wa(:new.search_clob,:new.c048);
    wa(:new.search_clob,:new.c049);wa(:new.search_clob,:new.c050);
    --
    -- history
    --
    if updating then
       -- initialize column label array
       for i in 1..50
       loop
           la_col_label('C'||to_char(i,'FM009')) := null;
           la_col_label('N'||to_char(i,'FM009')) := null;
           la_col_label('D'||to_char(i,'FM009')) := null;
       end loop;
       -- get column label array
       for c1 in (select column_alias, report_label 
                  from apex_ws_data_grid_col
                  where data_grid_id = :new.data_grid_id)
       loop
           la_col_label(c1.column_alias) := c1.report_label;
       end loop;
       -- strings
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C001'),'C',:old.c001,:new.c001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C002'),'C',:old.c002,:new.c002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C003'),'C',:old.c003,:new.c003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C004'),'C',:old.c004,:new.c004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C005'),'C',:old.c005,:new.c005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C006'),'C',:old.c006,:new.c006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C007'),'C',:old.c007,:new.c007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C008'),'C',:old.c008,:new.c008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C009'),'C',:old.c009,:new.c009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C010'),'C',:old.c010,:new.c010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C011'),'C',:old.c011,:new.c011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C012'),'C',:old.c012,:new.c012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C013'),'C',:old.c013,:new.c013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C014'),'C',:old.c014,:new.c014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C015'),'C',:old.c015,:new.c015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C016'),'C',:old.c016,:new.c016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C017'),'C',:old.c017,:new.c017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C018'),'C',:old.c018,:new.c018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C019'),'C',:old.c019,:new.c019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C020'),'C',:old.c020,:new.c020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C021'),'C',:old.c021,:new.c021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C022'),'C',:old.c022,:new.c022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C023'),'C',:old.c023,:new.c023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C024'),'C',:old.c024,:new.c024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C025'),'C',:old.c025,:new.c025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C026'),'C',:old.c026,:new.c026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C027'),'C',:old.c027,:new.c027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C028'),'C',:old.c028,:new.c028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C029'),'C',:old.c029,:new.c029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C030'),'C',:old.c030,:new.c030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C031'),'C',:old.c031,:new.c031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C032'),'C',:old.c032,:new.c032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C033'),'C',:old.c033,:new.c033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C034'),'C',:old.c034,:new.c034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C035'),'C',:old.c035,:new.c035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C036'),'C',:old.c036,:new.c036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C037'),'C',:old.c037,:new.c037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C038'),'C',:old.c038,:new.c038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C039'),'C',:old.c039,:new.c039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C040'),'C',:old.c040,:new.c040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C041'),'C',:old.c041,:new.c041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C042'),'C',:old.c042,:new.c042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C043'),'C',:old.c043,:new.c043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C044'),'C',:old.c044,:new.c044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C045'),'C',:old.c045,:new.c045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C046'),'C',:old.c046,:new.c046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C047'),'C',:old.c047,:new.c047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C048'),'C',:old.c048,:new.c048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C049'),'C',:old.c049,:new.c049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C050'),'C',:old.c050,:new.c050);
       -- numbers
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N001'),'N',null,null,null,null,:old.n001,:new.n001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N002'),'N',null,null,null,null,:old.n002,:new.n002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N003'),'N',null,null,null,null,:old.n003,:new.n003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N004'),'N',null,null,null,null,:old.n004,:new.n004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N005'),'N',null,null,null,null,:old.n005,:new.n005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N006'),'N',null,null,null,null,:old.n006,:new.n006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N007'),'N',null,null,null,null,:old.n007,:new.n007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N008'),'N',null,null,null,null,:old.n008,:new.n008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N009'),'N',null,null,null,null,:old.n009,:new.n009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N010'),'N',null,null,null,null,:old.n010,:new.n010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N011'),'N',null,null,null,null,:old.n011,:new.n011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N012'),'N',null,null,null,null,:old.n012,:new.n012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N013'),'N',null,null,null,null,:old.n013,:new.n013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N014'),'N',null,null,null,null,:old.n014,:new.n014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N015'),'N',null,null,null,null,:old.n015,:new.n015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N016'),'N',null,null,null,null,:old.n016,:new.n016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N017'),'N',null,null,null,null,:old.n017,:new.n017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N018'),'N',null,null,null,null,:old.n018,:new.n018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N019'),'N',null,null,null,null,:old.n019,:new.n019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N020'),'N',null,null,null,null,:old.n020,:new.n020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N021'),'N',null,null,null,null,:old.n021,:new.n021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N022'),'N',null,null,null,null,:old.n022,:new.n022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N023'),'N',null,null,null,null,:old.n023,:new.n023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N024'),'N',null,null,null,null,:old.n024,:new.n024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N025'),'N',null,null,null,null,:old.n025,:new.n025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N026'),'N',null,null,null,null,:old.n026,:new.n026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N027'),'N',null,null,null,null,:old.n027,:new.n027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N028'),'N',null,null,null,null,:old.n028,:new.n028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N029'),'N',null,null,null,null,:old.n029,:new.n029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N030'),'N',null,null,null,null,:old.n030,:new.n030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N031'),'N',null,null,null,null,:old.n031,:new.n031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N032'),'N',null,null,null,null,:old.n032,:new.n032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N033'),'N',null,null,null,null,:old.n033,:new.n033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N034'),'N',null,null,null,null,:old.n034,:new.n034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N035'),'N',null,null,null,null,:old.n035,:new.n035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N036'),'N',null,null,null,null,:old.n036,:new.n036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N037'),'N',null,null,null,null,:old.n037,:new.n037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N038'),'N',null,null,null,null,:old.n038,:new.n038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N039'),'N',null,null,null,null,:old.n039,:new.n039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N040'),'N',null,null,null,null,:old.n040,:new.n040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N041'),'N',null,null,null,null,:old.n041,:new.n041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N042'),'N',null,null,null,null,:old.n042,:new.n042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N043'),'N',null,null,null,null,:old.n043,:new.n043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N044'),'N',null,null,null,null,:old.n044,:new.n044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N045'),'N',null,null,null,null,:old.n045,:new.n045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N046'),'N',null,null,null,null,:old.n046,:new.n046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N047'),'N',null,null,null,null,:old.n047,:new.n047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N048'),'N',null,null,null,null,:old.n048,:new.n048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N049'),'N',null,null,null,null,:old.n049,:new.n049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N050'),'N',null,null,null,null,:old.n050,:new.n050);
       -- dates
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D001'),'D',null,null,:old.d001,:new.d001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D002'),'D',null,null,:old.d002,:new.d002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D003'),'D',null,null,:old.d003,:new.d003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D004'),'D',null,null,:old.d004,:new.d004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D005'),'D',null,null,:old.d005,:new.d005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D006'),'D',null,null,:old.d006,:new.d006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D007'),'D',null,null,:old.d007,:new.d007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D008'),'D',null,null,:old.d008,:new.d008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D009'),'D',null,null,:old.d009,:new.d009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D010'),'D',null,null,:old.d010,:new.d010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D011'),'D',null,null,:old.d011,:new.d011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D012'),'D',null,null,:old.d012,:new.d012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D013'),'D',null,null,:old.d013,:new.d013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D014'),'D',null,null,:old.d014,:new.d014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D015'),'D',null,null,:old.d015,:new.d015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D016'),'D',null,null,:old.d016,:new.d016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D017'),'D',null,null,:old.d017,:new.d017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D018'),'D',null,null,:old.d018,:new.d018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D019'),'D',null,null,:old.d019,:new.d019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D020'),'D',null,null,:old.d020,:new.d020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D021'),'D',null,null,:old.d021,:new.d021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D022'),'D',null,null,:old.d022,:new.d022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D023'),'D',null,null,:old.d023,:new.d023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D024'),'D',null,null,:old.d024,:new.d024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D025'),'D',null,null,:old.d025,:new.d025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D026'),'D',null,null,:old.d026,:new.d026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D027'),'D',null,null,:old.d027,:new.d027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D028'),'D',null,null,:old.d028,:new.d028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D029'),'D',null,null,:old.d029,:new.d029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D030'),'D',null,null,:old.d030,:new.d030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D031'),'D',null,null,:old.d031,:new.d031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D032'),'D',null,null,:old.d032,:new.d032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D033'),'D',null,null,:old.d033,:new.d033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D034'),'D',null,null,:old.d034,:new.d034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D035'),'D',null,null,:old.d035,:new.d035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D036'),'D',null,null,:old.d036,:new.d036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D037'),'D',null,null,:old.d037,:new.d037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D038'),'D',null,null,:old.d038,:new.d038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D039'),'D',null,null,:old.d039,:new.d039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D040'),'D',null,null,:old.d040,:new.d040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D041'),'D',null,null,:old.d041,:new.d041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D042'),'D',null,null,:old.d042,:new.d042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D043'),'D',null,null,:old.d043,:new.d043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D044'),'D',null,null,:old.d044,:new.d044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D045'),'D',null,null,:old.d045,:new.d045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D046'),'D',null,null,:old.d046,:new.d046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D047'),'D',null,null,:old.d047,:new.d047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D048'),'D',null,null,:old.d048,:new.d048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D049'),'D',null,null,:old.d049,:new.d049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D050'),'D',null,null,:old.d050,:new.d050);
    end if;
    --
    -- set owner
    --
    if :new.owner is null then
        :new.owner := :new.created_by;
    end if;
end;

-- ----------------------------
-- Checks structure for table APEX$_WS_ROWS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD CHECK ("DATA_GRID_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_ROWS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_ROWS" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_TAGS
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_TAGS_IDX1"
ON "DCM"."APEX$_WS_TAGS" ("WS_APP_ID" ASC, "DATA_GRID_ID" ASC, "ROW_ID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "DCM"."APEX$_WS_TAGS_IDX2"
ON "DCM"."APEX$_WS_TAGS" ("WS_APP_ID" ASC, "WEBPAGE_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table APEX$_WS_TAGS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_TAGS_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_TAGS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_WS_TAGS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE'));
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_TAGS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table APEX$_WS_WEBPG_SECTION_HISTORY
-- ----------------------------
CREATE INDEX "DCM"."APEX$_WS_WEBPG_SECHIST_IDX1"
ON "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ("WS_APP_ID" ASC, "WEBPAGE_ID" ASC, "SECTION_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table APEX$_WS_WEBPG_SECTION_HISTORY
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ADD CHECK ("SECTION_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ADD CHECK ("WEBPAGE_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ADD CHECK ("APPLICATION_USER_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTION_HISTORY" ADD CHECK ("CHANGE_DATE" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table APEX$_WS_WEBPG_SECTIONS
-- ----------------------------

-- ----------------------------
-- Triggers structure for table APEX$_WS_WEBPG_SECTIONS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."APEX$_WS_WEBPG_SECTIONS_T1" BEFORE INSERT OR UPDATE ON "DCM"."APEX$_WS_WEBPG_SECTIONS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
-- ----------------------------
-- Checks structure for table APEX$_WS_WEBPG_SECTIONS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK (chart_3d in ('Y','N'));
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK (nav_include_link in ('Y','N'));
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK (section_type in ('TEXT','DATA','CHART','NAV_PAGE','NAV_SECTION'));
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK ("WS_APP_ID" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK ("SECTION_TYPE" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK ("CREATED_ON" IS NOT NULL);
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD CHECK ("CREATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table APEX$_WS_WEBPG_SECTIONS
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_WEBPG_SECTIONS" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table DEMO_CUSTOMERS
-- ----------------------------
CREATE INDEX "DCM"."DEMO_CUST_NAME_IX"
ON "DCM"."DEMO_CUSTOMERS" ("CUST_LAST_NAME" ASC, "CUST_FIRST_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Triggers structure for table DEMO_CUSTOMERS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."INSERT_DEMO_CUST" BEFORE INSERT ON "DCM"."DEMO_CUSTOMERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
  cust_id number;
BEGIN
  SELECT demo_cust_seq.nextval
    INTO cust_id
    FROM dual;
  :new.CUSTOMER_ID := cust_id;
END;
-- ----------------------------
-- Checks structure for table DEMO_CUSTOMERS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_CUSTOMERS" ADD CHECK (credit_limit <= 5000);
ALTER TABLE "DCM"."DEMO_CUSTOMERS" ADD CHECK ("CUSTOMER_ID" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_CUSTOMERS" ADD CHECK ("CUST_FIRST_NAME" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_CUSTOMERS" ADD CHECK ("CUST_LAST_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEMO_CUSTOMERS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_CUSTOMERS" ADD PRIMARY KEY ("CUSTOMER_ID");

-- ----------------------------
-- Indexes structure for table DEMO_ORDER_ITEMS
-- ----------------------------

-- ----------------------------
-- Triggers structure for table DEMO_ORDER_ITEMS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."DEMO_ORDER_ITEMS_GET_PRICE" BEFORE INSERT OR UPDATE ON "DCM"."DEMO_ORDER_ITEMS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
declare
  l_list_price number;
begin
-- First, we need to get the current list price of the order line item
select list_price into l_list_price from demo_product_info
  where product_id = :new.product_id;

-- Once we have the correct price, we will update the order line with the correct price
:new.unit_price := l_list_price;

end;CREATE OR REPLACE TRIGGER "DCM"."INSERT_DEMO_ORDER_ITEMS" BEFORE INSERT ON "DCM"."DEMO_ORDER_ITEMS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
declare
  order_item_id number;
begin
select demo_order_items_seq.nextval into order_item_id from dual;
:new.ORDER_ITEM_ID := order_item_id;
end;
end;CREATE OR REPLACE TRIGGER "DCM"."UPDATE_ORDER_TOTAL" AFTER INSERT OR DELETE OR UPDATE ON "DCM"."DEMO_ORDER_ITEMS" REFERENCING OLD AS "OLD" NEW AS "NEW" ENABLE
begin

-- Update the Order Total when any order item is changed

update demo_orders set order_total =
  (select sum(unit_price*quantity) from demo_order_items
    where demo_order_items.order_id = demo_orders.order_id);
end;
-- ----------------------------
-- Checks structure for table DEMO_ORDER_ITEMS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD CHECK ("ORDER_ITEM_ID" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD CHECK ("ORDER_ID" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD CHECK ("PRODUCT_ID" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD CHECK ("UNIT_PRICE" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD CHECK ("QUANTITY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEMO_ORDER_ITEMS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD PRIMARY KEY ("ORDER_ITEM_ID");

-- ----------------------------
-- Indexes structure for table DEMO_ORDERS
-- ----------------------------
CREATE INDEX "DCM"."DEMO_ORD_CUSTOMER_IX"
ON "DCM"."DEMO_ORDERS" ("CUSTOMER_ID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table DEMO_ORDERS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDERS" ADD CHECK (order_total >= 0);
ALTER TABLE "DCM"."DEMO_ORDERS" ADD CHECK ("ORDER_ID" IS NOT NULL);
ALTER TABLE "DCM"."DEMO_ORDERS" ADD CHECK ("CUSTOMER_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEMO_ORDERS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDERS" ADD PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Indexes structure for table DEMO_PRODUCT_INFO
-- ----------------------------

-- ----------------------------
-- Triggers structure for table DEMO_PRODUCT_INFO
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."INSERT_DEMO_PROD" BEFORE INSERT ON "DCM"."DEMO_PRODUCT_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
  prod_id number;
BEGIN
  SELECT demo_prod_seq.nextval
    INTO prod_id
    FROM dual;
  :new.PRODUCT_ID := prod_id;
END;
-- ----------------------------
-- Checks structure for table DEMO_PRODUCT_INFO
-- ----------------------------
ALTER TABLE "DCM"."DEMO_PRODUCT_INFO" ADD CHECK ("PRODUCT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEMO_PRODUCT_INFO
-- ----------------------------
ALTER TABLE "DCM"."DEMO_PRODUCT_INFO" ADD PRIMARY KEY ("PRODUCT_ID");

-- ----------------------------
-- Indexes structure for table DEMO_USERS
-- ----------------------------

-- ----------------------------
-- Triggers structure for table DEMO_USERS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."BI_DEMO_USERS" BEFORE INSERT ON "DCM"."DEMO_USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
begin
  for c1 in (
    select DEMO_USERS_SEQ.nextval next_val
    from dual
  ) loop
    :new.USER_ID :=  c1.next_val;
    :new.admin_user := 'N';
    :new.created_on := sysdate;
  end loop;
end;
end;CREATE OR REPLACE TRIGGER "DCM"."DEMO_USERS_T1" BEFORE INSERT OR UPDATE ON "DCM"."DEMO_USERS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
begin
:NEW.user_name := upper(:NEW.user_name);
end;
-- ----------------------------
-- Primary Key structure for table DEMO_USERS
-- ----------------------------
ALTER TABLE "DCM"."DEMO_USERS" ADD PRIMARY KEY ("USER_ID");

-- ----------------------------
-- Indexes structure for table DEPT
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table DEPT
-- ----------------------------
ALTER TABLE "DCM"."DEPT" ADD PRIMARY KEY ("DEPTNO");

-- ----------------------------
-- Indexes structure for table EMP
-- ----------------------------

-- ----------------------------
-- Checks structure for table EMP
-- ----------------------------
ALTER TABLE "DCM"."EMP" ADD CHECK ("EMPNO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table EMP
-- ----------------------------
ALTER TABLE "DCM"."EMP" ADD PRIMARY KEY ("EMPNO");

-- ----------------------------
-- Indexes structure for table JOB_INFO
-- ----------------------------

-- ----------------------------
-- Triggers structure for table JOB_INFO
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_JOB_INFO" BEFORE INSERT ON "DCM"."JOB_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_JOB_INFO.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table JOB_INFO
-- ----------------------------
ALTER TABLE "DCM"."JOB_INFO" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table JOB_INFO
-- ----------------------------
ALTER TABLE "DCM"."JOB_INFO" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table JOB_PROCESS
-- ----------------------------

-- ----------------------------
-- Triggers structure for table JOB_PROCESS
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_JOB_PROCESS" BEFORE INSERT ON "DCM"."JOB_PROCESS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_JOB_PROCESS.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table JOB_PROCESS
-- ----------------------------
ALTER TABLE "DCM"."JOB_PROCESS" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table JOB_PROCESS
-- ----------------------------
ALTER TABLE "DCM"."JOB_PROCESS" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table JOB_TYPE
-- ----------------------------

-- ----------------------------
-- Triggers structure for table JOB_TYPE
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_JOB_TYPE" BEFORE INSERT ON "DCM"."JOB_TYPE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_JOB_TYPE.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table JOB_TYPE
-- ----------------------------
ALTER TABLE "DCM"."JOB_TYPE" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."JOB_TYPE" ADD CHECK ("TYPE_NO" IS NOT NULL);
ALTER TABLE "DCM"."JOB_TYPE" ADD CHECK ("TYPE_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table JOB_TYPE
-- ----------------------------
ALTER TABLE "DCM"."JOB_TYPE" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Triggers structure for table PROCESS_TYPE
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_PROCESS_TYPE" BEFORE INSERT ON "DCM"."PROCESS_TYPE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_PROCESS_TYPE.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table PROCESS_TYPE
-- ----------------------------
ALTER TABLE "DCM"."PROCESS_TYPE" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."PROCESS_TYPE" ADD CHECK ("TYPE_VALUE" IS NOT NULL);
ALTER TABLE "DCM"."PROCESS_TYPE" ADD CHECK ("TYPE_NAME" IS NOT NULL);

-- ----------------------------
-- Triggers structure for table ROLE_INFO
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_ROLE_INFO" BEFORE INSERT ON "DCM"."ROLE_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_ROLE_INFO.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table ROLE_INFO
-- ----------------------------
ALTER TABLE "DCM"."ROLE_INFO" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."ROLE_INFO" ADD CHECK ("ROLE_NAME" IS NOT NULL);
ALTER TABLE "DCM"."ROLE_INFO" ADD CHECK ("ROLE_LEVEL" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table USER_INFO
-- ----------------------------

-- ----------------------------
-- Triggers structure for table USER_INFO
-- ----------------------------
CREATE OR REPLACE TRIGGER "DCM"."TG_USER_INFO" BEFORE INSERT ON "DCM"."USER_INFO" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE WHEN (NEW.id is null)
begin
       select SEQ_USER_INFO.nextval into:NEW.id from dual;
end;
-- ----------------------------
-- Checks structure for table USER_INFO
-- ----------------------------
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("USER_NAME" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("USER_PWD" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("USER_NICK_NAME" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("CREATE_TIME" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("UPDATE_TIME" IS NOT NULL);
ALTER TABLE "DCM"."USER_INFO" ADD CHECK ("ROLE_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table USER_INFO
-- ----------------------------
ALTER TABLE "DCM"."USER_INFO" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Foreign Key structure for table "DCM"."APEX$_WS_FILES"
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_FILES" ADD FOREIGN KEY ("ROW_ID") REFERENCES "DCM"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "DCM"."APEX$_WS_LINKS"
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_LINKS" ADD FOREIGN KEY ("ROW_ID") REFERENCES "DCM"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "DCM"."APEX$_WS_NOTES"
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_NOTES" ADD FOREIGN KEY ("ROW_ID") REFERENCES "DCM"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "DCM"."APEX$_WS_TAGS"
-- ----------------------------
ALTER TABLE "DCM"."APEX$_WS_TAGS" ADD FOREIGN KEY ("ROW_ID") REFERENCES "DCM"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "DCM"."DEMO_ORDER_ITEMS"
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD FOREIGN KEY ("ORDER_ID") REFERENCES "DCM"."DEMO_ORDERS" ("ORDER_ID") ON DELETE CASCADE;
ALTER TABLE "DCM"."DEMO_ORDER_ITEMS" ADD FOREIGN KEY ("PRODUCT_ID") REFERENCES "DCM"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") ON DELETE CASCADE;

-- ----------------------------
-- Foreign Key structure for table "DCM"."DEMO_ORDERS"
-- ----------------------------
ALTER TABLE "DCM"."DEMO_ORDERS" ADD FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DCM"."DEMO_CUSTOMERS" ("CUSTOMER_ID");
ALTER TABLE "DCM"."DEMO_ORDERS" ADD FOREIGN KEY ("USER_ID") REFERENCES "DCM"."DEMO_USERS" ("USER_ID");

-- ----------------------------
-- Foreign Key structure for table "DCM"."EMP"
-- ----------------------------
ALTER TABLE "DCM"."EMP" ADD FOREIGN KEY ("MGR") REFERENCES "DCM"."EMP" ("EMPNO");
ALTER TABLE "DCM"."EMP" ADD FOREIGN KEY ("DEPTNO") REFERENCES "DCM"."DEPT" ("DEPTNO");
